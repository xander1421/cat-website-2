<!-- create a astro component with tailwindcss that takes props and can be displayed in grid or list views, and we have 2 buttons that trigger the modes you can use a random api for the props data-->
<div class="view-mode">
    <div class="flex justify-end mb-4">
    <button @click="setViewMode('grid')" :class="{'bg-gray-200': viewMode === 'grid'}" class="mr-2 px-4 py-2 rounded hover:bg-gray-200">Grid View</button>
    <button @click="setViewMode('list')" :class="{'bg-gray-200': viewMode === 'list'}" class="px-4 py-2 rounded hover:bg-gray-200">List View</button>
    </div>
    <div v-if="viewMode === 'grid'" class="grid grid-cols-3 gap-4">
    <div v-for="item in items" :key="item.id" class="bg-white p-2">
        <div class="font-bold">NAME</div>
        <div>EMAIL</div>
        <div>PHONE</div>
    </div>
    </div>
    <div v-else-if="viewMode === 'list'" class="flex flex-col">
    <div class="flex flex-row bg-gray-200 p-2">
        <div class="w-1/3 font-bold">Name</div>
        <div class="w-1/3 font-bold">Email</div>
        <div class="w-1/3 font-bold">Phone</div>
    </div>
    <div v-for="item in items" :key="item.id" class="flex flex-row bg-white p-2">
        <div class="w-1/3">NAME</div>
        <div class="w-1/3">EMAIL</div>
        <div class="w-1/3">PHONE</div>
    </div>
    </div>
</div>

  
  <script>
  export default {
    props: {
      items: {
        type: Array,
        default: () => []
      }
    },
    data() {
      return {
        viewMode: 'grid'
      }
    },
    methods: {
      setViewMode(mode) {
        this.viewMode = mode;
        localStorage.setItem('viewMode', mode);
      }
    },
    mounted() {
      const cachedViewMode = localStorage.getItem('viewMode');
      if (cachedViewMode) {
        this.viewMode = cachedViewMode;
      }
      fetch('https://jsonplaceholder.typicode.com/users')
        .then(response => response.json())
        .then(data => {
          this.$emit('update:items', data);
        })
        .catch(error => {
          console.error(error);
        });
    }
  }
  </script>
  
  <style>
  .view-mode {
    max-width: 800px;
    margin: 0 auto;
  }
  </style>
  